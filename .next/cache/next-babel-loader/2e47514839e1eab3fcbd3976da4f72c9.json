{"ast":null,"code":"import styled from \"styled-components\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport path from 'path';\nimport dotenv from 'dotenv'; // dotenv.config({ path: path.join(__dirname,'../.env') });\n\ndotenv.config();\n\nconst getNow = () => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth() + 1;\n  const day = now.getDate();\n  const hours = now.getHours();\n  const minutes = now.getMinutes();\n  return `${year}년 ${month}월 ${day}일 ${hours}시 ${minutes}분`;\n};\n\nconst KakaoMessage = async ({\n  name,\n  phone,\n  address\n}) => {\n  const key = process.env.REACT_APP_ORANGE_MSG_KEY;\n  const url = \"https://www.apiorange.com/api/send/notice.do\";\n  const temp_number = 11754;\n  const time = getNow();\n  console.log(key);\n  const postConfig = {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      'Authorization': `${key}`\n    }\n  };\n  /* 대표님 */\n\n  const postData1 = JSON.stringify({\n    tmp_number: temp_number,\n    kakao_sender: process.env.REACT_APP_KAKAO_SENDER,\n    kakao_name: name,\n    kakao_phone: process.env.REACT_APP_KAKAO_PHONE_1,\n    kakao_add1: time,\n    kakao_add2: phone,\n    kakao_add3: address,\n    kakao_add4: \"\",\n    kakao_add5: \"\",\n    kakao_add6: \"\",\n    kakao_add7: \"\",\n    kakao_add8: \"\",\n    kakao_add9: \"\",\n    kakao_add10: \"\",\n    kakao_080: \"N\",\n    kakao_res: \"\",\n    kakao_res_date: \"\",\n    TRAN_REPLACE_TYPE: \"\"\n  });\n  /* 부장님 */\n\n  const postData2 = JSON.stringify({\n    tmp_number: temp_number,\n    kakao_sender: process.env.REACT_APP_KAKAO_SENDER,\n    kakao_name: name,\n    kakao_phone: process.env.REACT_APP_KAKAO_PHONE_2,\n    kakao_add1: time,\n    kakao_add2: phone,\n    kakao_add3: address,\n    kakao_add4: \"\",\n    kakao_add5: \"\",\n    kakao_add6: \"\",\n    kakao_add7: \"\",\n    kakao_add8: \"\",\n    kakao_add9: \"\",\n    kakao_add10: \"\",\n    kakao_080: \"N\",\n    kakao_res: \"\",\n    kakao_res_date: \"\",\n    TRAN_REPLACE_TYPE: \"\"\n  }); //const { state, refetch } = useAxios({url, postData1, postConfig});\n\n  const result = await axios.post(url, postData2, postConfig);\n\n  if (result.error) {\n    console.log(\"error: \" + result.error);\n    alert(\"error: \" + result.error);\n    alert(\"에러가 발생하였습니다. 다시 시도해주세요.\");\n  } else {\n    alert(\"성공적으로 문의하였습니다.\");\n  }\n};\n\nexport default KakaoMessage;","map":{"version":3,"sources":["/home/ec2-user/deliverycook/frontend/src/Next/Components/KakaoMessage.js"],"names":["styled","React","useState","useEffect","axios","path","dotenv","config","getNow","now","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","KakaoMessage","name","phone","address","key","process","env","REACT_APP_ORANGE_MSG_KEY","url","temp_number","time","console","log","postConfig","headers","postData1","JSON","stringify","tmp_number","kakao_sender","REACT_APP_KAKAO_SENDER","kakao_name","kakao_phone","REACT_APP_KAKAO_PHONE_1","kakao_add1","kakao_add2","kakao_add3","kakao_add4","kakao_add5","kakao_add6","kakao_add7","kakao_add8","kakao_add9","kakao_add10","kakao_080","kakao_res","kakao_res_date","TRAN_REPLACE_TYPE","postData2","REACT_APP_KAKAO_PHONE_2","result","post","error","alert"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport path from 'path';\nimport dotenv from 'dotenv';\n// dotenv.config({ path: path.join(__dirname,'../.env') });\ndotenv.config();\n\nconst getNow = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = now.getMonth() + 1 ;\n    const day = now.getDate();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n\n    return (`${year}년 ${month}월 ${day}일 ${hours}시 ${minutes}분`);\n\n};\n\n\nconst KakaoMessage = async ({name, phone, address}) => {\n\n    const key = process.env.REACT_APP_ORANGE_MSG_KEY;\n    const url = \"https://www.apiorange.com/api/send/notice.do\";\n    const temp_number = 11754;\n    const time = getNow();\n   console.log(key);\n\n    const postConfig = {\n        headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        'Authorization' : `${key}`\n        }\n    };\n\n    /* 대표님 */\n    const postData1 = JSON.stringify(\n    {\n        tmp_number : temp_number,\n        kakao_sender : process.env.REACT_APP_KAKAO_SENDER,\n        kakao_name : name,\n        kakao_phone : process.env.REACT_APP_KAKAO_PHONE_1,\n        kakao_add1 : time,\n        kakao_add2 : phone,\n        kakao_add3 : address,\n        kakao_add4 : \"\",\n        kakao_add5 : \"\",\n        kakao_add6 : \"\",\n        kakao_add7 : \"\",\n        kakao_add8 : \"\",\n        kakao_add9 : \"\",\n        kakao_add10 : \"\",\n        kakao_080 : \"N\",\n        kakao_res : \"\",\n        kakao_res_date : \"\",\n        TRAN_REPLACE_TYPE : \"\"\n    });\n\n    /* 부장님 */\n    const postData2 = JSON.stringify(\n        {\n            tmp_number : temp_number,\n            kakao_sender : process.env.REACT_APP_KAKAO_SENDER,\n            kakao_name : name,\n            kakao_phone : process.env.REACT_APP_KAKAO_PHONE_2,\n            kakao_add1 : time,\n            kakao_add2 : phone,\n            kakao_add3 : address,\n            kakao_add4 : \"\",\n            kakao_add5 : \"\",\n            kakao_add6 : \"\",\n            kakao_add7 : \"\",\n            kakao_add8 : \"\",\n            kakao_add9 : \"\",\n            kakao_add10 : \"\",\n            kakao_080 : \"N\",\n            kakao_res : \"\",\n            kakao_res_date : \"\",\n            TRAN_REPLACE_TYPE : \"\"\n        });\n\n    //const { state, refetch } = useAxios({url, postData1, postConfig});\n\n    const result = await axios.post(url, postData2, postConfig);\n  \n    if (result.error) {\n        console.log( \"error: \" + result.error);\n        alert( \"error: \" + result.error);\n        alert (\"에러가 발생하였습니다. 다시 시도해주세요.\");\n\n    } else {\n        alert (\"성공적으로 문의하였습니다.\")\n    }\n};\n\n\nexport default KakaoMessage;\n\n\n\n"]},"metadata":{},"sourceType":"module"}