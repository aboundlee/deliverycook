{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport styled from \"styled-components\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport path from 'path';\nimport dotenv from 'dotenv'; // dotenv.config({ path: path.join(__dirname,'../.env') });\n\ndotenv.config();\n\nvar getNow = function getNow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth() + 1;\n  var day = now.getDate();\n  var hours = now.getHours();\n  var minutes = now.getMinutes();\n  return \"\".concat(year, \"\\uB144 \").concat(month, \"\\uC6D4 \").concat(day, \"\\uC77C \").concat(hours, \"\\uC2DC \").concat(minutes, \"\\uBD84\");\n};\n\nvar KakaoMessage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var name, phone, address, key, url, temp_number, time, postConfig, postData1, postData2, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = _ref.name, phone = _ref.phone, address = _ref.address;\n            key = process.env.REACT_APP_ORANGE_MSG_KEY;\n            url = \"https://www.apiorange.com/api/send/notice.do\";\n            temp_number = 11754;\n            time = getNow();\n            postConfig = {\n              headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                'Authorization': \"\".concat(key)\n              }\n            };\n            /* 대표님 */\n\n            postData1 = JSON.stringify({\n              tmp_number: temp_number,\n              kakao_sender: process.env.REACT_APP_KAKAO_SENDER,\n              kakao_name: name,\n              kakao_phone: process.env.REACT_APP_KAKAO_PHONE_1,\n              kakao_add1: time,\n              kakao_add2: phone,\n              kakao_add3: address,\n              kakao_add4: \"\",\n              kakao_add5: \"\",\n              kakao_add6: \"\",\n              kakao_add7: \"\",\n              kakao_add8: \"\",\n              kakao_add9: \"\",\n              kakao_add10: \"\",\n              kakao_080: \"N\",\n              kakao_res: \"\",\n              kakao_res_date: \"\",\n              TRAN_REPLACE_TYPE: \"\"\n            });\n            /* 부장님 */\n\n            postData2 = JSON.stringify({\n              tmp_number: temp_number,\n              kakao_sender: process.env.REACT_APP_KAKAO_SENDER,\n              kakao_name: name,\n              kakao_phone: process.env.REACT_APP_KAKAO_PHONE_2,\n              kakao_add1: time,\n              kakao_add2: phone,\n              kakao_add3: address,\n              kakao_add4: \"\",\n              kakao_add5: \"\",\n              kakao_add6: \"\",\n              kakao_add7: \"\",\n              kakao_add8: \"\",\n              kakao_add9: \"\",\n              kakao_add10: \"\",\n              kakao_080: \"N\",\n              kakao_res: \"\",\n              kakao_res_date: \"\",\n              TRAN_REPLACE_TYPE: \"\"\n            }); //const { state, refetch } = useAxios({url, postData1, postConfig});\n\n            _context.next = 10;\n            return axios.post(url, postData2, postConfig);\n\n          case 10:\n            result = _context.sent;\n\n            if (result.error) {\n              console.log(\"error: \" + result.error);\n              alert(\"error: \" + result.error);\n              alert(\"에러가 발생하였습니다. 다시 시도해주세요.\");\n            } else {\n              alert(\"성공적으로 문의하였습니다.\");\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function KakaoMessage(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default KakaoMessage;","map":null,"metadata":{},"sourceType":"module"}