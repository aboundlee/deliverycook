/*
Copyright Â© David Bushell | @dbushell | http://dbushell.com
*/

@function rem($px, $base: 16) {
  @return ($px / $base) + rem;
}

$color--white     : #fff;
$color--silver    : #f7f7f5;
$color--slate     : #494b4c;
$color--cream     : #f2f0e6;
$color--canvas    : #d9d7ce;
$color--highlight : #fff699;
$color--error     : #e54545;
$color--green     : #99cc66;
$color--blue      : #3d9ccc;
$color--dark-blue : #226181;
$color--red       : #E50012;

$color--grey       : #494b4d;
$color--dark-grey  : #303233;
$color--light-grey : #919599;

$color--line       : lighten(#b3b0aa, 15);
$color--light-line : lighten($color--line, 15);
$color--dark-line  : darken($color--line, 15);


body {
height: 100%;
overflow-x: hidden;

&.js-lock-scroll {
  overflow: hidden !important;
}

&.js-lock-pointer {
  pointer-events: none !important;
}
}

a {
  color: $color--red;
  text-decoration: none;

  &:focus, &:hover {
    color: $color--red;
}
}


.button {
  display: inline-block;
  appearance: none;
  outline: none;
  border: none;
  padding: 0;
  margin: 0;
  font-weight: bold;
  font-size: rem(14);
  line-height: rem(21);
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  box-shadow: 1px 1px 2px rgba(0,0,0, 0.1);
  transition: color 150ms ease, box-shadow 150ms ease, background 300ms ease;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background: #fff;
  color: $color--blue;
  cursor: pointer;

  &:hover {
    color: $color--dark-blue;
    box-shadow: 1px 2px 3px rgba(0,0,0, 0.2);
  }

  &:active {
    color: #fff;
    transition: none;
    background:  $color--red;
  }
}

.button:not([class*='button--']) {
padding: rem(7) rem(14);
}

.button--circular {
  position: relative;
  border-radius: 100%;
  padding: rem(60);

  span {
    display: block;
    height: 0;
    line-height: 0;
    margin: 50% 0 -50% 0;
    width: calc(100%);
    padding-bottom: calc(100%);
  }

  .fa {
    display: inline;
    line-height: 0;
  }
}

.nav-open {
position: absolute;
position: fixed;
bottom: rem(25);
right: rem(25);
}



.overlay,
.modal-wrapper {
position: fixed;
top: 0;
left: 0;
right: 0;
bottom: 0;
width: 100%;
height: 100%;
}

.overlay {
z-index: 10000;
overflow: hidden;
display: none;

&.js-open {
  display: block;
}
}

.overlay__ripple {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 100%;
  background: $color--blue;
  opacity: 0;
  transform-origin: 0 0;
  backface-visibility: hidden;
  transform: scale(0) translate3d(-50%, -50%, 0);
  transition: opacity 300ms ease-in-out, transform 600ms cubic-bezier(0.7, 0, 0.6, 0.8);

.overlay[data-modal="nav"] & {
  background: $color--red;
}

.js-animate-in & {
  opacity: 1;
  transform: scale(1) translate3d(-50%, -50%, 0);
}

.js-animate-done & {
  border-radius: 0;
  transform: none;
  transition: opacity 600ms ease-in-out;
}
}

.modal-wrapper {
  z-index: 10001;
  overflow: hidden;
  -webkit-overflow-scrolling: touch;

  display: -ms-flexbox;
  -ms-flex-align: center;
  -ms-flex-pack: center;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;

  .overlay:not(.js-open) + & {
    display: none;
  }

  &:after, &:before {
    display: block;
    content: "";
  }
  
//  display: none;

  .overlay.js-animate-in.js-animate-done + & {
    overflow: auto;
  }

}


.modal {
box-sizing: border-box;
position: relative;
//display: none;
background: transparent;
opacity: 0;
transform: translateZ(0);
transition: opacity 300ms 150ms ease-in-out, transform 300ms 150ms ease-in-out;
}

// nav

.modal[data-modal="nav"] {
  width: 100%;
  height: 100%;
}

.button[data-action="close"] {
    position: absolute;
    bottom: rem(25);

    right: rem(25);
}

.overlay[data-modal="nav"] {

  & + .modal-wrapper {

    
    &:after, &:before {
      display: none;
    }
}


&.js-animate-in + .modal-wrapper .modal[data-modal="nav"] {
    opacity: 1;
    transform: scale(1);
}
}

// test modal

.modal[data-modal="test"] {
opacity: 0;
transform: scale(0.95);

.cssclippaths & {
  transform: translateZ(0);
  clip-path: circle(0% at 50% 50%);
  -webkit-clip-path: circle(0% at 50% 50%);
  transition: opacity 300ms ease-in-out, -webkit-clip-path 300ms cubic-bezier(0.7, 0, 0.6, 0.8);
}

}

.overlay[data-modal="test"] {

&.js-open + .modal-wrapper .modal[data-modal="test"] {
    display: block;
}

&.js-animate-in + .modal-wrapper .modal[data-modal="test"] {
    opacity: 1;
    transform: scale(1);
}
}

.modal__footer {
position: absolute;
left: 0;
right: 0;
bottom: 0;
padding: rem(14) rem(21);
background: $color--canvas;
text-align: right;
}

/* Header */

/* Media qurey section */



@media screen and (max-width:768px) {

  
    .nav div.show_list {
        height: auto;
        display: none;
    }
  
    .nav div.media_button {
        display: block;
    }
}


/* Animation */
/* Inspiration taken from Dicson https://codemyui.com/simple-hamburger-menu-x-mark-animation/ */

@-webkit-keyframes inM {
    50% {
        -webkit-transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(45deg);
    }
}

@keyframes inM {
    50% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(45deg);
    }
}

@-webkit-keyframes outM {
    50% {
        -webkit-transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(45deg);
    }
}

@keyframes outM {
    50% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(45deg);
    }
}

@-webkit-keyframes inT {
    0% {
        -webkit-transform: translateY(0px) rotate(0deg);
    }
    50% {
        -webkit-transform: translateY(9px) rotate(0deg);
    }
    100% {
        -webkit-transform: translateY(9px) rotate(135deg);
    }
}

@keyframes inT {
    0% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(9px) rotate(0deg);
    }
    100% {
        transform: translateY(9px) rotate(135deg);
    }
}

@-webkit-keyframes outT {
    0% {
        -webkit-transform: translateY(0px) rotate(0deg);
    }
    50% {
        -webkit-transform: translateY(9px) rotate(0deg);
    }
    100% {
        -webkit-transform: translateY(9px) rotate(135deg);
    }
}

@keyframes outT {
    0% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(9px) rotate(0deg);
    }
    100% {
        transform: translateY(9px) rotate(135deg);
    }
}

@-webkit-keyframes inBtm {
    0% {
        -webkit-transform: translateY(0px) rotate(0deg);
    }
    50% {
        -webkit-transform: translateY(-9px) rotate(0deg);
    }
    100% {
        -webkit-transform: translateY(-9px) rotate(135deg);
    }
}

@keyframes inBtm {
    0% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-9px) rotate(0deg);
    }
    100% {
        transform: translateY(-9px) rotate(135deg);
    }
}

@-webkit-keyframes outBtm {
    0% {
        -webkit-transform: translateY(0px) rotate(0deg);
    }
    50% {
        -webkit-transform: translateY(-9px) rotate(0deg);
    }
    100% {
        -webkit-transform: translateY(-9px) rotate(135deg);
    }
}

@keyframes outBtm {
    0% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-9px) rotate(0deg);
    }
    100% {
        transform: translateY(-9px) rotate(135deg);
    }
}

.affix {
    padding: 0;
    background-color: #111;
}




/* ConsultForm */



  
label {
      display: inline-block; // to make it easier to click
      color: #fff;
      cursor: pointer;
      position: relative; // important
    
      // Now we'll create the checkbox object
    
      span {
        display: inline-block;
        position: relative;
        background-color: transparent;
        width: 25px;
        height: 25px;
        transform-origin: center;
        border: 2px solid #fff;
        border-radius: 50%;
        vertical-align: -6px;
        margin-right: 10px;
        transition: background-color 150ms 200ms, transform 350ms cubic-bezier(.78,-1.22,.17,1.89); // custom ease effect for bouncy animation
    
    // Now we'll create the "tick" using pseudo elements - those will be basically two lines that will be rotated to form the "tick"
    
      &:before {
        content: "";
        width: 0px;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: #fff;
        position: absolute;
        transform: rotate(45deg);
        top: 12px;
        left: 7px;
        transition: width 50ms ease 50ms;
        transform-origin: 0% 0%;
      }
    
      &:after {
        content: "";
        width: 0;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: #fff;
        position: absolute;
        transform: rotate(305deg);
        top: 16px; // you'll need to experiment with placement depending on the dimensions you've chosen
        left: 8px; // you'll need to experiment with placement depending on the dimensions you've chosen
        transition: width 50ms ease;
        transform-origin: 0% 0%;
      }
    }
    // Time to add some life to it
    
    &:hover {
      span {
        &:before {
          width: 5px;
          transition: width 100ms ease;
        }
        
        &:after {
          width: 10px;
          transition: width 150ms ease 100ms;
        }
      }
    }
  }
  
input[type=checkbox]{
      display: none; // hide the system checkbox
    
    // Let's add some effects after the checkbox is checked
    
    &:checked {
      + label {
        span {
          background-color: #fff;
          transform: scale(1.25); // enlarge the box
          
          &:after {
            width: 10px;
            background: #E50012;
            transition: width 150ms ease 100ms; // enlarge the tick
          }
          
          &:before {
            width: 5px;
            background: #E50012;
            transition: width 150ms ease 100ms; // enlarge the tick
          }
        }
        
        &:hover { // copy the states for onMouseOver to avoid flickering
          span {
            background-color: #fff;
            transform: scale(1.25); // enlarge the box
  
            &:after {
              width: 10px;
              background: #E50012;
              transition: width 150ms ease 100ms; // enlarge the tick
            }
  
            &:before {
              width: 5px;
              background: #E50012;
              transition: width 150ms ease 100ms; // enlarge the tick
            }
          }  
        }
      }
    }
 }
