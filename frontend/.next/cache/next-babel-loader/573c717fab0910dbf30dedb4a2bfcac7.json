{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ec2-user/deliverycook/frontend/src/pages/business.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 0 auto;\\n  border-color: red;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { css } from \"styled-components\"; // import \"../../../Styles/BusinessMain.css\";\n\nimport { useState, useEffect } from 'react';\nimport Section2 from '../Next/Components/Business/Section2';\nimport Section4 from '../Routes/Business/Main/Section4';\nimport Section5 from '../Routes/Business/Main/Section5';\nimport Section6 from '../Routes/Business/Main/Section6';\nimport Section7 from '../Next/Components/Business/Section7';\nimport Footer from '../Components/Footer';\nimport BrandSection1 from '../Routes/Brand/Main/Section1';\nimport ReactFullpage from '@fullpage/react-fullpage'; // will return static version on server and \"live\" version on client\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport path from 'path';\nimport dotenv from 'dotenv';\ndotenv.config();\nvar override = css(_templateObject());\n\nvar _StyledClipLoader = styled(ClipLoader).withConfig({\n  displayName: \"business___StyledClipLoader\",\n  componentId: \"sc-1uux3p3-0\"\n})([\"\", \"\"], override);\n\nvar Business = function Business() {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    console.log(\"Loading!\");\n    setLoading(true);\n  }, []);\n  return __jsx(React.Fragment, null, isLoading ? __jsx(ReactFullpage, {\n    licenseKey: process.env.REACT_APP_FULLPAGE_KEY,\n    navigation: true,\n    render: function render(_ref) {\n      var state = _ref.state,\n          fullpageApi = _ref.fullpageApi;\n      return __jsx(ReactFullpage.Wrapper, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"section\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, __jsx(BrandSection1, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 38\n        }\n      })), __jsx(\"div\", {\n        className: \"section\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(Section2, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 38\n        }\n      })), __jsx(\"div\", {\n        className: \"section\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, __jsx(Section4, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }\n      })), __jsx(\"div\", {\n        className: \"section\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, __jsx(Section5, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }\n      })), __jsx(\"div\", {\n        className: \"section\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, __jsx(Section6, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 38\n        }\n      })), __jsx(\"div\", {\n        className: \"section\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, __jsx(Section7, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 38\n        }\n      }), __jsx(Footer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 49\n        }\n      })));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(_StyledClipLoader, {\n    size: 150,\n    color: \"#123abc\",\n    loading: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Business, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n\n_c = Business;\nexport default Business;\n\nvar _c;\n\n$RefreshReg$(_c, \"Business\");","map":{"version":3,"sources":["/home/ec2-user/deliverycook/frontend/src/pages/business.js"],"names":["styled","css","useState","useEffect","Section2","Section4","Section5","Section6","Section7","Footer","BrandSection1","ReactFullpage","ClipLoader","path","dotenv","config","override","Business","isLoading","setLoading","console","log","process","env","REACT_APP_FULLPAGE_KEY","state","fullpageApi"],"mappings":"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","sourcesContent":["\n\nimport styled, {css} from \"styled-components\";\n// import \"../../../Styles/BusinessMain.css\";\nimport {useState, useEffect} from 'react';\n\nimport Section2 from '../Next/Components/Business/Section2';\nimport Section4 from '../Routes/Business/Main/Section4';\nimport Section5 from '../Routes/Business/Main/Section5';\nimport Section6 from '../Routes/Business/Main/Section6';\nimport Section7 from '../Next/Components/Business/Section7';\nimport Footer from '../Components/Footer';\nimport BrandSection1 from '../Routes/Brand/Main/Section1';\n\nimport ReactFullpage from '@fullpage/react-fullpage'; // will return static version on server and \"live\" version on client\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nimport path from 'path';\nimport dotenv from 'dotenv';\ndotenv.config();\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n \n\nconst Business = () => {\n   \n    const [isLoading, setLoading] = useState(false);\n    useEffect(()=>{\n       console.log(\"Loading!\");\n        setLoading(true);\n    },[]);\n\n\n    return (\n        <>\n        { isLoading ? \n             (\n    <ReactFullpage\n        licenseKey = {process.env.REACT_APP_FULLPAGE_KEY}\n        navigation\n\n        render={({ state, fullpageApi }) => {\n        return (\n            <ReactFullpage.Wrapper>\n            <div className=\"section\"><BrandSection1/></div>\n            <div className=\"section\"><Section2/></div>\n            <div className=\"section\"><Section4/></div>\n            <div className=\"section\"><Section5/></div>\n            <div className=\"section\"><Section6/></div>\n            <div className=\"section\"><Section7/><Footer/></div> \n            </ReactFullpage.Wrapper>\n        );\n    }}\n     />) :      <div>\n        <ClipLoader\n          css={override}\n          size={150}\n          color={\"#123abc\"}\n          loading={isLoading}\n        />\n      </div>\n     }\n     </>\n     );\n\n\n};\n\n\nexport default Business;\n\n\n\n"]},"metadata":{},"sourceType":"module"}