{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport styled from \"styled-components\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport path from 'path';\nimport dotenv from 'dotenv'; // dotenv.config({ path: path.join(__dirname,'../.env') });\n\ndotenv.config();\n\nvar getNow = function getNow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth() + 1;\n  var day = now.getDate();\n  var hours = now.getHours();\n  var minutes = now.getMinutes();\n  return \"\".concat(year, \"\\uB144 \").concat(month, \"\\uC6D4 \").concat(day, \"\\uC77C \").concat(hours, \"\\uC2DC \").concat(minutes, \"\\uBD84\");\n};\n\nvar KakaoMessage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var name, phone, address, key, url, temp_number, time, postConfig, postData1, postData2, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = _ref.name, phone = _ref.phone, address = _ref.address;\n            key = process.env.REACT_APP_ORANGE_MSG_KEY;\n            url = \"https://www.apiorange.com/api/send/notice.do\";\n            temp_number = 11754;\n            time = getNow();\n            postConfig = {\n              headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                'Authorization': \"\".concat(key)\n              }\n            };\n            /* 대표님 */\n\n            postData1 = JSON.stringify({\n              tmp_number: temp_number,\n              kakao_sender: process.env.REACT_APP_KAKAO_SENDER,\n              kakao_name: name,\n              kakao_phone: process.env.REACT_APP_KAKAO_PHONE_1,\n              kakao_add1: time,\n              kakao_add2: phone,\n              kakao_add3: address,\n              kakao_add4: \"\",\n              kakao_add5: \"\",\n              kakao_add6: \"\",\n              kakao_add7: \"\",\n              kakao_add8: \"\",\n              kakao_add9: \"\",\n              kakao_add10: \"\",\n              kakao_080: \"N\",\n              kakao_res: \"\",\n              kakao_res_date: \"\",\n              TRAN_REPLACE_TYPE: \"\"\n            });\n            /* 부장님 */\n\n            postData2 = JSON.stringify({\n              tmp_number: temp_number,\n              kakao_sender: process.env.REACT_APP_KAKAO_SENDER,\n              kakao_name: name,\n              kakao_phone: process.env.REACT_APP_KAKAO_PHONE_2,\n              kakao_add1: time,\n              kakao_add2: phone,\n              kakao_add3: address,\n              kakao_add4: \"\",\n              kakao_add5: \"\",\n              kakao_add6: \"\",\n              kakao_add7: \"\",\n              kakao_add8: \"\",\n              kakao_add9: \"\",\n              kakao_add10: \"\",\n              kakao_080: \"N\",\n              kakao_res: \"\",\n              kakao_res_date: \"\",\n              TRAN_REPLACE_TYPE: \"\"\n            }); //const { state, refetch } = useAxios({url, postData1, postConfig});\n\n            _context.next = 10;\n            return axios.post(url, postData2, postConfig);\n\n          case 10:\n            result = _context.sent;\n\n            if (result.error) {\n              console.log(\"error: \" + result.error);\n              alert(\"error: \" + result.error);\n              alert(\"에러가 발생하였습니다. 다시 시도해주세요.\");\n            } else {\n              alert(\"성공적으로 문의하였습니다.\");\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function KakaoMessage(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n_c = KakaoMessage;\nexport default KakaoMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoMessage\");","map":{"version":3,"sources":["/home/ec2-user/deliverycook/frontend/src/Next/Components/KakaoMessage.js"],"names":["styled","React","useState","useEffect","axios","path","dotenv","config","getNow","now","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","KakaoMessage","name","phone","address","key","process","env","REACT_APP_ORANGE_MSG_KEY","url","temp_number","time","postConfig","headers","postData1","JSON","stringify","tmp_number","kakao_sender","REACT_APP_KAKAO_SENDER","kakao_name","kakao_phone","REACT_APP_KAKAO_PHONE_1","kakao_add1","kakao_add2","kakao_add3","kakao_add4","kakao_add5","kakao_add6","kakao_add7","kakao_add8","kakao_add9","kakao_add10","kakao_080","kakao_res","kakao_res_date","TRAN_REPLACE_TYPE","postData2","REACT_APP_KAKAO_PHONE_2","post","result","error","console","log","alert"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport path from 'path';\nimport dotenv from 'dotenv';\n// dotenv.config({ path: path.join(__dirname,'../.env') });\ndotenv.config();\n\nconst getNow = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = now.getMonth() + 1 ;\n    const day = now.getDate();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n\n    return (`${year}년 ${month}월 ${day}일 ${hours}시 ${minutes}분`);\n\n};\n\n\nconst KakaoMessage = async ({name, phone, address}) => {\n\n    const key = process.env.REACT_APP_ORANGE_MSG_KEY;\n    const url = \"https://www.apiorange.com/api/send/notice.do\";\n    const temp_number = 11754;\n    const time = getNow();\n\n    const postConfig = {\n        headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        'Authorization' : `${key}`\n        }\n    };\n\n    /* 대표님 */\n    const postData1 = JSON.stringify(\n    {\n        tmp_number : temp_number,\n        kakao_sender : process.env.REACT_APP_KAKAO_SENDER,\n        kakao_name : name,\n        kakao_phone : process.env.REACT_APP_KAKAO_PHONE_1,\n        kakao_add1 : time,\n        kakao_add2 : phone,\n        kakao_add3 : address,\n        kakao_add4 : \"\",\n        kakao_add5 : \"\",\n        kakao_add6 : \"\",\n        kakao_add7 : \"\",\n        kakao_add8 : \"\",\n        kakao_add9 : \"\",\n        kakao_add10 : \"\",\n        kakao_080 : \"N\",\n        kakao_res : \"\",\n        kakao_res_date : \"\",\n        TRAN_REPLACE_TYPE : \"\"\n    });\n\n    /* 부장님 */\n    const postData2 = JSON.stringify(\n        {\n            tmp_number : temp_number,\n            kakao_sender : process.env.REACT_APP_KAKAO_SENDER,\n            kakao_name : name,\n            kakao_phone : process.env.REACT_APP_KAKAO_PHONE_2,\n            kakao_add1 : time,\n            kakao_add2 : phone,\n            kakao_add3 : address,\n            kakao_add4 : \"\",\n            kakao_add5 : \"\",\n            kakao_add6 : \"\",\n            kakao_add7 : \"\",\n            kakao_add8 : \"\",\n            kakao_add9 : \"\",\n            kakao_add10 : \"\",\n            kakao_080 : \"N\",\n            kakao_res : \"\",\n            kakao_res_date : \"\",\n            TRAN_REPLACE_TYPE : \"\"\n        });\n\n    //const { state, refetch } = useAxios({url, postData1, postConfig});\n\n    const result = await axios.post(url, postData2, postConfig);\n  \n    if (result.error) {\n        console.log( \"error: \" + result.error);\n        alert( \"error: \" + result.error);\n        alert (\"에러가 발생하였습니다. 다시 시도해주세요.\");\n\n    } else {\n        alert (\"성공적으로 문의하였습니다.\")\n    }\n};\n\n\nexport default KakaoMessage;\n\n\n\n"]},"metadata":{},"sourceType":"module"}