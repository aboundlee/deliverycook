{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/deliverycook/frontend/src/Components/Router.js\";\nvar __jsx = React.createElement;\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'; //import { connect } from 'react-redux';\n//import { actionCreators } from './Store';\n\nimport BrandMain from \"../Routes/Brand/Main/BrandMain\";\nimport BrandAbout from \"../Routes/Brand/BrandAbout\";\nimport BrandStore from \"../Routes/Brand/BrandStore\";\nimport BrandNews from \"../Routes/Brand/BrandNews\";\nimport BusinessMain from \"../Routes/Business/Main/BusinessMain\";\nimport BusinessSucess from \"../Routes/Business/Sucess/BusinessSucess\";\nimport BusinessInfo from \"../Routes/Business/BusinessInfo\";\nimport BusinessConsult from \"../Routes/Business/BusinessConsult\";\n\nconst BrandRoutes = ({\n  changePageTo\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Route, {\n    exact: true,\n    path: \"/\",\n    component: BrandMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/about\",\n    component: BrandAbout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/store\",\n    component: BrandStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/news\",\n    component: BrandNews,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/business\",\n    component: BusinessMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/success\",\n    component: BusinessSucess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/info\",\n    component: BusinessInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/consult\",\n    component: BusinessConsult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst AppRouter = () => {\n  return __jsx(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(BrandRoutes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n};\n/*function mapStateToProps(state, ownProps) {\n    return { isBrandPage: state.isBrandPage };\n  }\n  \n  \n  \nfunction mapDispatchToProps(dispatch, ownProps) {\n    return {\n        changePageTo: brandCategory => dispatch(actionCreators.changePageTo(brandCategory))\n    };\n}\n  export default connect(mapStateToProps, mapDispatchToProps)(AppRouter);\n\n*/\n\n\nAppRouter.propTypes = {\n  isBrandPage: PropTypes.bool\n};\nexport default AppRouter;","map":{"version":3,"sources":["/home/ec2-user/deliverycook/frontend/src/Components/Router.js"],"names":["PropTypes","React","HashRouter","Router","Route","Switch","BrandMain","BrandAbout","BrandStore","BrandNews","BusinessMain","BusinessSucess","BusinessInfo","BusinessConsult","BrandRoutes","changePageTo","AppRouter","propTypes","isBrandPage","bool"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,KAA/B,EAAsCC,MAAtC,QAAoD,kBAApD,C,CACA;AACA;;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAEpC,SACA,4BACI,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAET,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAEC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAEC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADA;AAcH,CAhBD;;AAmBA,MAAMG,SAAS,GAAG,MAAM;AACpB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AASH,CAVD;AAcA;;;;;;;;;;;;;;;;AAeAA,SAAS,CAACC,SAAV,GAAsB;AAClBC,EAAAA,WAAW,EAAElB,SAAS,CAACmB;AADL,CAAtB;AAMA,eAAeH,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n//import { connect } from 'react-redux';\n//import { actionCreators } from './Store';\n\nimport BrandMain from \"../Routes/Brand/Main/BrandMain\";\nimport BrandAbout from \"../Routes/Brand/BrandAbout\";\nimport BrandStore from \"../Routes/Brand/BrandStore\";\nimport BrandNews from \"../Routes/Brand/BrandNews\";\n\nimport BusinessMain from \"../Routes/Business/Main/BusinessMain\";\nimport BusinessSucess from \"../Routes/Business/Sucess/BusinessSucess\";\nimport BusinessInfo from \"../Routes/Business/BusinessInfo\";\nimport BusinessConsult from \"../Routes/Business/BusinessConsult\";\n\nconst BrandRoutes = ({changePageTo}) => {\n\n    return (\n    <>\n        <Route exact path=\"/\" component={BrandMain} />\n\n        <Route exact path=\"/about\" component={BrandAbout} />\n        <Route exact path=\"/store\" component={BrandStore} />\n        <Route exact path=\"/news\" component={BrandNews} />\n        \n        <Route exact path=\"/business\" component={BusinessMain} />\n        <Route exact path=\"/success\" component={BusinessSucess} />\n        <Route exact path=\"/info\" component={BusinessInfo} />\n        <Route exact path=\"/consult\" component={BusinessConsult} />\n    </>\n    )\n};\n\n\nconst AppRouter = () => {\n    return (\n        <Router>\n            <Switch>\n                 \n                <BrandRoutes/> \n                 \n            </Switch>\n        </Router>\n    );\n};\n\n\n\n/*function mapStateToProps(state, ownProps) {\n    return { isBrandPage: state.isBrandPage };\n  }\n  \n  \n  \nfunction mapDispatchToProps(dispatch, ownProps) {\n    return {\n        changePageTo: brandCategory => dispatch(actionCreators.changePageTo(brandCategory))\n    };\n}\n  export default connect(mapStateToProps, mapDispatchToProps)(AppRouter);\n\n*/\n\nAppRouter.propTypes = {\n    isBrandPage: PropTypes.bool\n};\n\n\n\nexport default AppRouter;\n\n"]},"metadata":{},"sourceType":"module"}